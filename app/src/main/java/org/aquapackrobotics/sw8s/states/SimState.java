package org.aquapackrobotics.sw8s.states;

import java.util.concurrent.ScheduledThreadPoolExecutor;

import org.aquapackrobotics.sw8s.trainingsim.SimWindow;

/**
 * Simulator specific state.
 */
public abstract class SimState extends State {
    private static int waypointCount;

    SimWindow window;

    public SimState(ScheduledThreadPoolExecutor pool, SimWindow window) {
        super(pool);
        this.window = window;
    }

    /**
     * Sets the linear and angular velocity of the robot back to zero.
     */
    protected void ResetMomentum() {
        window.setRobotSpeed(0, 0, 0);
    }

    /**
     * Draws a series of waypoints while moving
     * @param milliseconds The amount of milliseconds in total to move (sleep) for
     * @param waypoints The number of waypoints to draw
     */
    protected void drawTrace(long milliseconds, int waypoints) {
        long interval = milliseconds / waypoints;

        for (int i = 0; i < waypoints; i++) {
            try {
                window.addWaypoint("Autogenerated waypoint " + waypointCount++, (int) window.getXPos(), (int) window.getYPos());
                Thread.sleep(interval);
            } catch (Exception e) {
                System.out.print(e.getMessage());
            }
        }
    }
}
